http {
    server {
        listen 80;

        server_name localhost;

        location /auth/ { # blocco che intercetta tutte le richieste che iniziano con /auth nell'URL

            proxy_pass http://auth-service:5001; # inoltra le richieste all'URL specificato
            proxy_set_header Host $host; # imposta l'header Host della richiesta inoltrata a Flask con il valore di $host (il nome del server richiesto, ad esempio "localhost"); utile se il backend (il servizio Flask) si aspetta di vedere un header Host coerente con il dominio o il nome del server.

            #proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /food {
            proxy_pass http://food-service:5002;
            proxy_set_header Host $host;
        }

        location /order {
            proxy_pass http://order-service:5003;
            proxy_set_header Host $host;
        }

        location /payment {
            proxy_pass http://payment-service:5004;
            proxy_set_header Host $host;
        }

    }
}

events {}