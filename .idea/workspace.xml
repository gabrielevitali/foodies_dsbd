<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="83522f88-f957-45f6-8a1b-3963e2e75949" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/config.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/routes/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/routes/auth.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/services/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/services/db_service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/utils/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/utils/hash_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/app/utils/jwt_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/auth_service.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/auth_service/wsgi.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/app/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/app/config.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/app/routes/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/app/routes/food.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/app/services/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/app/services/db_service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/app/utils/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/app/utils/jwt_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/food_service.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/food_service/wsgi.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/foodies.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/nginx/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/nginx/nginx.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/app/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/app/config.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/app/routes/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/app/routes/order.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/app/services/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/app/services/db_service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/order_service.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order_service/wsgi.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/app/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/app/config.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/app/routes/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/app/routes/payment.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/app/services/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/app/services/db_service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/payment_service.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/payment_service/wsgi.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/untitled.iml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.23.2" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2pf455HDCE7DExZOGZ3JwpmDLYo" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python.wsgi (1).executor&quot;: &quot;Run&quot;,
    &quot;Python.wsgi (2).executor&quot;: &quot;Run&quot;,
    &quot;Python.wsgi (3).executor&quot;: &quot;Run&quot;,
    &quot;Python.wsgi.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/gabri/Desktop/Workspace/Flask/foodies/auth_service/wsgi.py&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.37810487&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Python.wsgi (3)">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="foodies" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="foodies" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="wsgi (1)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="food_service" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/food_service" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/food_service/wsgi.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="wsgi (2)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="order_service" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/order_service" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/order_service/wsgi.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="wsgi (3)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="payment_service" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/payment_service" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/payment_service/wsgi.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="wsgi" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="auth_service" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/auth_service" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/auth_service/wsgi.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.wsgi (3)" />
        <item itemvalue="Python.wsgi (2)" />
        <item itemvalue="Python.wsgi (1)" />
        <item itemvalue="Python.wsgi" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="83522f88-f957-45f6-8a1b-3963e2e75949" name="Changes" comment="" />
      <created>1733143610047</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1733143610047</updated>
      <workItem from="1733143611044" duration="6777000" />
      <workItem from="1733153588393" duration="12311000" />
      <workItem from="1733183570903" duration="509000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName=".env" />
    <option featureType="com.intellij.fileTypeFactory" implementationName="nginx.conf" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/foodies$wsgi__3_.coverage" NAME="wsgi (3) Coverage Results" MODIFIED="1733159013186" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/payment_service" />
    <SUITE FILE_PATH="coverage/foodies$wsgi.coverage" NAME="wsgi Coverage Results" MODIFIED="1733145658873" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/auth_service" />
    <SUITE FILE_PATH="coverage/foodies$wsgi__1_.coverage" NAME="wsgi (1) Coverage Results" MODIFIED="1733156666623" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/food_service" />
    <SUITE FILE_PATH="coverage/foodies$wsgi__2_.coverage" NAME="wsgi (2) Coverage Results" MODIFIED="1733158944044" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/order_service" />
  </component>
</project>