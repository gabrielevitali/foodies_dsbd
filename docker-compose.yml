x-common-settings: &common-settings
  restart: always
  networks:
    app_network:

x-common-depends-on: &common-depends-on
  depends_on:
    - mysql-db
    - kafka

services:
  apigw:
    <<: *common-settings
    build: ./nginx
    container_name: api-gateway
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - food-service
      - order-service
      - payment-service

  auth-service:
    <<: *common-settings
    build:
      context: ./auth_service
    container_name: auth-service
    depends_on:
      - mysql-db
    env_file:
      - ./auth_service/.env  # file di configurazione delle variabili di ambiente
    environment:
      - MYSQL_HOST
      - MYSQL_PORT
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_ALLOW_EMPTY_PASSWORD

  food-service:
    <<: *common-settings
    build:
      context: ./food_service
    container_name: food-service
    env_file:
      - ./food_service/.env
    depends_on:
      - mongo-db

  order-service:
    <<: [*common-settings, *common-depends-on]
    build:
      context: ./order_service
    container_name: order-service
    env_file:
      - ./order_service/.env

  payment-service:
    <<: [*common-settings, *common-depends-on]
    build:
      context: ./payment_service
    container_name: payment-service
    env_file:
      - ./payment_service/.env

  mysql-db:
    <<: *common-settings
    #image: mysql:8.0
    image: gabrielevitali/foodies-mysql:latest
    container_name: mysql-db
    restart: always
    env_file:
      - .env
    volumes:
      - mysql-data:/var/lib/mysql

  adminer:
    <<: *common-settings
    image: adminer
    container_name: adminer
    ports:
      - "8083:8080"
    depends_on:
      - mysql-db

  mongo-db:
    <<: *common-settings
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"  # per debug
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db

  mongo-express:
    <<: *common-settings
    image: mongo-express
    ports:
      - "8084:8081"
    env_file:
      - .env
    depends_on:
      - mongo-db

  zookeeper:
    <<: *common-settings
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    <<: *common-settings
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  mysql-data:
  mongo-data:

networks:
  app_network:
    name: app-network
    driver: bridge